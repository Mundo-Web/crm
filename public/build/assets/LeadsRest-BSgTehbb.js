var g=Object.defineProperty;var d=(i,o,e)=>o in i?g(i,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[o]=e;var s=(i,o,e)=>d(i,typeof o!="symbol"?o+"":o,e);import{m as a}from"./CreateReactScript-BcJ_1dIf.js";import{B as c}from"./Adminto-CJ48K716.js";class m extends c{constructor(){super(...arguments);s(this,"path","leads");s(this,"paginateSufix","served");s(this,"get",async e=>{try{const{status:r,result:t}=await a.Fetch(`/api/${this.path}/${e}`);if(!r)throw new Error((t==null?void 0:t.message)||"Ocurrio un error inesperado");return t.data}catch(r){return a.Notify.add({icon:"/assets/img/logo-login.svg",title:"Error",body:r.message,type:"danger"}),null}});s(this,"all",async()=>{try{const{status:e,result:r}=await a.Fetch(`/api/${this.path}`);if(!e)throw new Error((r==null?void 0:r.message)||"Ocurrio un error inesperado");return r.data}catch(e){return a.Notify.add({icon:"/assets/img/logo-login.svg",title:"Error",body:e.message,type:"danger"}),[]}});s(this,"leadStatus",async e=>{try{const{status:r,result:t}=await a.Fetch(`/api/${this.path}/status`,{method:"POST",body:JSON.stringify(e)});if(!r)throw new Error((t==null?void 0:t.message)||"Ocurrio un error inesperado");return!0}catch(r){return a.Notify.add({icon:"/assets/img/logo-login.svg",title:"Error",body:r.message,type:"danger"}),!1}});s(this,"manageStatus",async e=>{try{const{status:r,result:t}=await a.Fetch(`/api/${this.path}/manage-status`,{method:"POST",body:JSON.stringify(e)});if(!r)throw new Error((t==null?void 0:t.message)||"Ocurrio un error inesperado");return!0}catch(r){return a.Notify.add({icon:"/assets/img/logo-login.svg",title:"Error",body:r.message,type:"danger"}),!1}});s(this,"massiveAssign",async e=>{try{const{status:r,result:t}=await a.Fetch(`/api/${this.path}/massive-assign`,{method:"POST",body:JSON.stringify(e)});if(!r)throw new Error((t==null?void 0:t.message)||"Ocurrio un error inesperado");return!0}catch(r){return a.Notify.add({icon:"/assets/img/logo-login.svg",title:"Error",body:r.message,type:"danger"}),!1}});s(this,"attend",async(e,r)=>{try{const{status:t,result:n}=await a.Fetch(`/api/${this.path}/attend/${e}`,{method:r?"PUT":"DELETE"});if(!t)throw new Error((n==null?void 0:n.message)||"Ocurrio un error inesperado");return!0}catch(t){return a.Notify.add({icon:"/assets/img/logo-login.svg",title:"Error",body:t.message,type:"danger"}),!1}})}}export{m as L};
