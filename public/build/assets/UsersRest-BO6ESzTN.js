var d=Object.defineProperty;var c=(i,o,s)=>o in i?d(i,o,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[o]=s;var a=(i,o,s)=>c(i,typeof o!="symbol"?o+"":o,s);import{m as t,G as g}from"./CreateReactScript-DEiMbi6B.js";import{B as y}from"./Adminto-BubVNbfu.js";class f extends y{constructor(){super(...arguments);a(this,"path","users");a(this,"assignRole",async s=>{try{const{status:e,result:r}=await t.Fetch(`/api/${this.path}/assign-role`,{method:"POST",body:t.JSON.stringify(s)});if(!e)throw new Error((r==null?void 0:r.message)||"Ocurrio un error inesperado");return t.Notify.add({icon:"/assets/img/logo-login.svg",title:"Correcto",body:r.message,type:"success"}),!0}catch(e){return t.Notify.add({icon:"/assets/img/logo-login.svg",title:"Error",body:e.message,type:"danger"}),!1}});a(this,"addSign",async s=>{let e=!1,r=null;const n=await fetch(`${g.APP_PROTOCOL}://${g.APP_DOMAIN}/api/signs`,{method:"POST",headers:{"X-Xsrf-Token":decodeURIComponent(t.Cookies.get("XSRF-TOKEN"))},body:s});return e=n.ok,r=t.JSON.parseable(await n.text()),e?(r==null?void 0:r.data)??!0:t.Notify.add({icon:"/assets/img/logo-login.svg",title:"Error",body:(r==null?void 0:r.message)||"OcurriÃ³ un error inesperado",type:"danger"})});a(this,"deleteSign",async()=>{try{const{status:s,result:e}=await t.Fetch("/api/users/sign",{method:"DELETE"});if(!s)throw new Error((e==null?void 0:e.message)??"Ocurrio un error inesperado");return t.Notify.add({icon:"/assets/img/logo-login.svg",title:"Correcto",body:e.message,type:"success"}),!0}catch(s){return t.Notify.add({icon:"/assets/img/logo-login.svg",title:"Error",body:s.message,type:"danger"}),!1}});a(this,"setDefaultSign",async s=>{try{const{status:e,result:r}=await t.Fetch("/api/users/sign/default",{method:"PUT",body:t.JSON.stringify(s)});if(!e)throw new Error((r==null?void 0:r.message)??"Ocurrio un error inesperado");return t.Notify.add({icon:"/assets/img/logo-login.svg",title:"Correcto",body:r.message,type:"success"}),!0}catch(e){return t.Notify.add({icon:"/assets/img/logo-login.svg",title:"Error",body:e.message,type:"danger"}),!1}});a(this,"allInvitations",async()=>{try{const{status:s,result:e}=await t.Fetch("/api/users/all-invitations",{method:"GET"});if(!s)throw new Error((e==null?void 0:e.message)??"Ocurrio un error inesperado");return(e==null?void 0:e.data)??[]}catch(s){return t.Notify.add({icon:"/assets/img/logo-login.svg",title:"Error",body:s.message,type:"danger"}),[]}})}}export{f as U};
